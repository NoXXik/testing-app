import { useSelector } from "react-redux";
import { useAppSelector } from "../../../shared/hooks/useAppSelector";
import {
  getQuestionsCount,
  getTotalPoints,
} from "../../../store/selectors/selectors";
import { useEffect, useState } from "react";
import { useNavigate } from "react-router-dom";
import { TestHistory } from "../../../shared/types";
import { TestHistoryList } from "../../../components/TestHistoryList";
import "./ResultPage.scss";

const resultTexts: Record<number, { text: string; smile: string }> = {
  1: {
    text: "–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ –≤–∞–º –Ω–µ —É–¥–∞–ª–æ—Å—å –¥–æ—Å—Ç–∏—á—å —Ö–æ—Ä–æ—à–µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —É–¥–µ–ª–∏—Ç—å –±–æ–ª—å—à–µ –≤–Ω–∏–º–∞–Ω–∏—è –∏–∑—É—á–µ–Ω–∏—é –æ–∫—Ä—É–∂–∞—é—â–µ–≥–æ –º–∏—Ä–∞. –ù–µ –æ—Ç—á–∞–∏–≤–∞–π—Ç–µ—Å—å! –° –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–æ–π –≤—ã —Å–º–æ–∂–µ—Ç–µ —É–ª—É—á—à–∏—Ç—å —Å–≤–æ–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã. üí™",
    smile: "üòû",
  },
  2: {
    text: "–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å –±–∞–∑–æ–≤—ã–µ –∑–Ω–∞–Ω–∏—è, –Ω–æ –µ—Å—Ç—å –º–µ—Å—Ç–∞, –≥–¥–µ –º–æ–∂–Ω–æ –µ—â—ë —É–ª—É—á—à–∏—Ç—å—Å—è. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —É–¥–µ–ª–∏—Ç—å –±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ –∏–∑—É—á–µ–Ω–∏–µ –ø–æ–ª–µ–∑–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏. –ù–µ —Å–¥–∞–≤–∞–π—Ç–µ—Å—å! –°–æ –≤—Ä–µ–º–µ–Ω–µ–º –≤—ã —Å–º–æ–∂–µ—Ç–µ –¥–æ—Å—Ç–∏—á—å —Ö–æ—Ä–æ—à–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤.",
    smile: "üòê",
  },
  3: {
    text: "–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ —É –≤–∞—Å —Ö–æ—Ä–æ—à–∏–µ –∑–Ω–∞–Ω–∏—è. –û–¥–Ω–∞–∫–æ, –Ω–µ —Å—Ç–æ–∏—Ç –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å—Å—è –Ω–∞ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–æ–º. –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ —É—á–∏—Ç—å—Å—è –∏ –ø—Ä–∞–∫—Ç–∏–∫–æ–≤–∞—Ç—å—Å—è –¥–ª—è –µ—â—ë –ª—É—á—à–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤.",
    smile: "üôÇ",
  },
  4: {
    text: "–í–µ–ª–∏–∫–æ–ª–µ–ø–Ω–æ! –í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≥–æ–≤–æ—Ä–∏—Ç –æ –≤—ã—Å–æ–∫–æ–º —É—Ä–æ–≤–Ω–µ –∑–Ω–∞–Ω–∏–π –∏ –æ—Ç–ª–∏—á–Ω–æ–π –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –∫ —Ç–µ—Å—Ç—É. –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è –∏ –≤–æ–ø–ª–æ—â–∞—Ç—å —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ. –¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å!",
    smile: "üéâ",
  },
};

export const ResultPage = () => {
  const totalPoints = useSelector(getTotalPoints);
  const totalCount = useSelector(getQuestionsCount);
  const user = useAppSelector((state) => state.test.user);
  const navigate = useNavigate();
  const [result, setResult] = useState<{ text: string; smile: string } | null>(
    null,
  );
  const [history, setHistory] = useState<TestHistory[]>([]);

  const handleRepeat = () => {
    navigate("/");
  };

  useEffect(() => {
    if (user) {
      // –í—ã—á–∏—Å–ª—è–µ–º —Ä–µ–π—Ç–∏–Ω–≥ –¥–ª—è –≤—ã–±–æ—Ä–∞ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–π—Ç–∏–Ω–≥–∞ –≤—ã–±–∏—Ä–∞–µ–º –Ω—É–∂–Ω—ã–π —Ç–µ–∫—Å—Ç –∏ —Å–º–∞–π–ª–∏–∫
      const rate = Math.min(Math.floor(user.points / (totalPoints / 4) + 1), 4);
      setResult(resultTexts[rate]);
    }
  }, [totalPoints, totalCount]);

  useEffect(() => {
    // –ü—Ä–∏ –ø–µ—Ä–≤–æ–º —Ä–µ–Ω–¥–µ—Ä–µ –¥–æ—Å—Ç–∞–µ–º –∏–∑ localStorage –∏—Å—Ç–æ—Ä–∏—é —Ç–µ—Å—Ç–æ–≤ –∏ –¥–æ–±–∞–≤–ª—è–µ–º –≤ state
    const testHistory = JSON.parse(localStorage.getItem("test_history"));
    if (testHistory) {
      setHistory(testHistory);
    }
  }, []);
  return (
    <>
      <div className="result-page">
        <h1 className="result-page__title">{result && result.smile}</h1>
        <p className="result-page__text">{result && result.text}</p>
        <h3 className="result-page__points">–í–∞—à–∏ –±–∞–ª–ª—ã: {user?.points}</h3>
        <button className="result-page__button" onClick={handleRepeat}>
          –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ
        </button>
        <div className="result-page__history">
          {history.length > 0 && <TestHistoryList results={history} />}
        </div>
      </div>
    </>
  );
};
